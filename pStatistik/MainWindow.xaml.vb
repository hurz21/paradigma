Imports System.Data
''SELECT count(*) FROM stammdaten s,raumbezug2vorgang e where bearbeiter="plöb" and e.vorgangsid=s.vorgangsid
'SELECT * FROM stammdaten s,ereignis e where bearbeiter="plöb" and e.vorgangsid=s.vorgangsid
Class MainWindow
    'Private GIS_Server = "w2gis02"
    'Private GIS_WebServer = "w2gis02.kreis-of.local" '"127.0.0.1"
    Private paradigma_user = "paradigmaumwelt"
    Private paradigma_PW = "luftikus"
    Private pvorgangREC As clsDBspecMYSQL
    'Private mylog As New clsLogging("statistik.log")
    Private bearbeiterDT As DataTable
    Private csvfile$ = String.Format("{0}\statistik{1}{2}.csv", System.Environment.GetEnvironmentVariable("APPDATA"), Now.Year, Now.Month)
    Private delim$ = ";"
    Public Property anonym As Boolean = False
    Public enc As System.Text.Encoding = System.Text.Encoding.GetEncoding("iso-8859-1")

    Private Sub parameter()
        Dim hinweis$ = ""
        Dim anzRB%, anzEr%, anzVorgang%, anzdok%
        initDatabase()
        '  aktinitial$ = tbInitial.Text
        Dim sw As New IO.StreamWriter(csvfile, False, enc)

        If btnAnonym.IsChecked Then
            anonym = True
        Else
            anonym = False
        End If
        If anonym Then
            pvorgangREC.mydb.SQL = "SELECT * from bearbeiter order by id"
        Else
            pvorgangREC.mydb.SQL = "SELECT * from bearbeiter order by name"
        End If

        hinweis$ = pvorgangREC.getDataDT()
        bearbeiterDT = pvorgangREC.dt.Copy

        '     sw.WriteLine("User " & delim & "SpatialRef." & delim & "Events" & delim & "Documents" & delim & "Issues" & delim)
        sw.WriteLine(String.Format("Person {0}Abteilung{0}Raumbezüge{0}Ereignisse{0}Dokumente{0}Vorgänge{0}", delim))

        For Each bearbeiter In bearbeiterDT.AsEnumerable
            anzRB% = getANZRB(bearbeiter.Item("Initial").ToString)
            anzEr% = getANZereignisse(bearbeiter.Item("Initial").ToString)
            anzdok% = getANZdokumente(bearbeiter.Item("Initial").ToString)
            anzVorgang% = getANZstammdaten(bearbeiter.Item("Initial").ToString)
            ' Console.WriteLine(initial.Item("Initial").ToString & " Rb: " & anzRB & " Er: " & anzEr)
            If anonym Then
                sw.WriteLine(bearbeiter.Item("ID").ToString & delim & bearbeiter.Item("Abteilung").ToString & delim & anzRB & delim & anzEr & delim & anzdok & delim & anzVorgang)
            Else
                sw.WriteLine(bearbeiter.Item("Name").ToString & delim & bearbeiter.Item("Abteilung").ToString & delim & anzRB & delim & anzEr & delim & anzdok & delim & anzVorgang)
            End If
        Next
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        ' sw.WriteLine("Automated Report: Productivity. Generated by Paradigma, " & Now().Year)
        sw.Close()
        sw.Dispose()
        Process.Start(csvfile)
        End
    End Sub

    Private Sub Start_Click(ByVal sender As System.Object, ByVal e As System.Windows.RoutedEventArgs)
        parameter()
    End Sub

    Private Function getANZdokumente(ByVal aktinitial$) As Integer
        '   SELECT * FROM stammdaten s,ereignis e where bearbeiter="plöb" and e.vorgangsid=s.vorgangsid
        pvorgangREC.mydb.SQL = String.Format("SELECT count(dokumentid) FROM dokument2vorgang d,stammdaten e where e.bearbeiter='{0}' and e.vorgangsid=d.vorgangsid", aktinitial$)
        'SELECT count(dokumentid) FROM dokument2vorgang d,stammdaten e where e.bearbeiter='Feij' and e.vorgangsid=d.vorgangsid
        ' pvorgangREC.mydb.SQL = "SELECT count(*) FROM  ereignis e where quelle='" & aktinitial$ & "' "
        nachricht("hinweis$ = " & pvorgangREC.getDataDT())
        If pvorgangREC.dt.Rows.Count < 1 Then
            Return 0
        End If
        Return CInt(clsDBtools.fieldvalue(pvorgangREC.dt.Rows(0).Item(0)))
    End Function

    Private Function getANZstammdaten(ByVal aktinitial$) As Integer
        '   SELECT * FROM stammdaten s,ereignis e where bearbeiter="plöb" and e.vorgangsid=s.vorgangsid
        '   pvorgangREC.mydb.SQL = "SELECT count(*) FROM stammdaten s,ereignis e where bearbeiter='" & aktinitial$ & "' and e.vorgangsid=s.vorgangsid"
        pvorgangREC.mydb.SQL = String.Format("SELECT count(*) FROM  stammdaten s where bearbeiter='{0}' ", aktinitial$)
        nachricht("hinweis$ = " & pvorgangREC.getDataDT())
        If pvorgangREC.dt.Rows.Count < 1 Then
            Return 0
        End If 
        Return CInt(clsDBtools.fieldvalue(pvorgangREC.dt.Rows(0).Item(0)))
    End Function

    Private Function getANZereignisse(ByVal aktinitial$) As Integer
        '   SELECT * FROM stammdaten s,ereignis e where bearbeiter="plöb" and e.vorgangsid=s.vorgangsid
        pvorgangREC.mydb.SQL = String.Format("SELECT count(*) FROM stammdaten s,ereignis e where bearbeiter='{0}' and e.vorgangsid=s.vorgangsid",
                                             aktinitial$)
        pvorgangREC.mydb.SQL = String.Format("SELECT count(*) FROM  ereignis e where quelle='{0}' ",
                                             aktinitial$)
        nachricht("hinweis$ = " & pvorgangREC.getDataDT())
        If pvorgangREC.dt.Rows.Count < 1 Then
            Return 0
        End If
        If aktinitial$ = "WalR" Then
            Debug.Print("")
        End If
        Return CInt(clsDBtools.fieldvalue(pvorgangREC.dt.Rows(0).Item(0)))
    End Function

    Private Function getANZRB(ByVal aktinitial$) As Integer
        pvorgangREC.mydb.SQL = String.Format("SELECT count(*) FROM stammdaten s,raumbezug2vorgang e where bearbeiter='{0}' and e.vorgangsid=s.vorgangsid", aktinitial$)
        nachricht("hinweis$ = " & pvorgangREC.getDataDT())
        If pvorgangREC.dt.Rows.Count < 1 Then
            Return 0
        End If
        Return CInt(clsDBtools.fieldvalue(pvorgangREC.dt.Rows(0).Item(0)))
    End Function
    Private Sub initDatabase()
        pvorgangREC = New clsDBspecMYSQL()
        pvorgangREC.mydb.dbtyp = "mysql"
        pvorgangREC.mydb.MySQLServer = "kis"
        pvorgangREC.mydb.Schema = "paradigma"
        pvorgangREC.mydb.username = paradigma_user
        pvorgangREC.mydb.password = paradigma_PW
    End Sub



    Private Sub start_sachgebiet(ByVal sender As System.Object, ByVal e As System.Windows.RoutedEventArgs)
        'SELECT  sachgebietnr,count( sachgebietnr) FROM stammdaten s, vorgang v where s.vorgangsid=v.vorgangsid and bearbeiter="plöb" group by sachgebietnr
        Dim hinweis$ = ""
        Dim anzVorgang%
        initDatabase()
        '  aktinitial$ = tbInitial.Text
        Dim sw As New IO.StreamWriter(csvfile, False, enc)

        If btnAnonym.IsChecked Then
            anonym = True
        Else
            anonym = False
        End If
        If anonym Then
            pvorgangREC.mydb.SQL = "SELECT * from bearbeiter order by id"
        Else
            pvorgangREC.mydb.SQL = "SELECT * from bearbeiter order by name"
        End If

        hinweis$ = pvorgangREC.getDataDT()
        bearbeiterDT = pvorgangREC.dt.Copy

        '     sw.WriteLine("User " & delim & "SpatialRef." & delim & "Events" & delim & "Documents" & delim & "Issues" & delim)
        sw.WriteLine(String.Format("Initial{0}Anzahl{0}Beschreibung{0}", delim))
        Dim user$ = ""
        For Each bearbeiter In bearbeiterDT.AsEnumerable
            If anonym Then
                user = (bearbeiter.Item("ID").ToString)
            Else
                user = bearbeiter.Item("Name").ToString
            End If
            anzVorgang% = getneu(bearbeiter.Item("Initial").ToString)
            For i = 0 To pvorgangREC.dt.Rows.Count - 1
                sw.WriteLine(user & delim & pvorgangREC.dt.Rows(i).Item("anzahl").ToString & delim &
                             pvorgangREC.dt.Rows(i).Item("sachgebietstext") & delim)
            Next i
        Next
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        sw.WriteLine("")
        ' sw.WriteLine("Automated Report: Productivity. Generated by Paradigma, " & Now().Year)
        sw.Close()
        sw.Dispose()
        Process.Start(csvfile)
        End
    End Sub
    Private Function getneu(ByVal aktinitial$) As Integer
        'SELECT  sachgebietnr,count( sachgebietnr) FROM stammdaten s, vorgang v where s.vorgangsid=v.vorgangsid and bearbeiter="plöb" group by sachgebietnr

        '        pvorgangREC.mydb.SQL = "SELECT count(*) FROM stammdaten s,raumbezug2vorgang e where bearbeiter='" & aktinitial$ & "' and e.vorgangsid=s.vorgangsid"
        pvorgangREC.mydb.SQL = String.Format("SELECT  bearbeiter, count( sachgebietnr) as anzahl,sachgebietstext FROM stammdaten s, vorgang v  where s.vorgangsid=v.vorgangsid and bearbeiter='{0}' group by sachgebietnr", aktinitial$)
        nachricht("hinweis$ = " & pvorgangREC.getDataDT())
        If pvorgangREC.dt.Rows.Count < 1 Then
            Return 0
        End If
        Return 1
    End Function

    Shared Sub nachricht(ByVal texxt$)
        ' My.Application.
        My.Log.WriteEntry(texxt)
    End Sub
End Class
